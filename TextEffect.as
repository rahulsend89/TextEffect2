import com.greensock.TweenNano;import com.greensock.easing.*;class TextEffect {	var letterCount:Number = 0;	var startLocX:Number;	var startLocY:Number;	var startRotation:Number;	var startAlpha:Number;	var startXscale:Number;	var startYscale:Number;	var nextX:Number;	var nextY:Number;	var inputTextStr:String;	var intMakeLetters:Number;	var intFadeLetters:Number;	var todo:Number;	var endLocX:Number;	var endLocY:Number;	var endRotation:Number;	var endAlpha:Number;	var endXscale:Number;	var endYscale:Number;	var target:MovieClip;	var effect:String;	var widthLimit:Number;	var formatEffect:TextFormat;	var len:Number;	var easeEff;	var speed:Number;	//TweenNano.to(newLetter,.5,{_x:newLetter._x+this.startLocX , _y:newLetter._y+this.startLocY , _rotation:newLetter._rotation+this.startRotation , _xscale:newLetter._xscale+this.startXscale , _yscale:newLetter._yscale+this.startXscale , _alpha:newLetter._alpha+this.startAlpha , onComplete:onFinishTweenFadeIn, onCompleteParams:[newLetter], this.ease});	function TextEffect (target:MovieClip, inputTextStr:String, effect:String, startLocX:Number, startLocY:Number, startXscale:Number, startYscale:Number, startRotation:Number, startAlpha:Number, formatEffect:TextFormat, widthLimit:Number, speed:Number, easeEff) {		this.inputTextStr = inputTextStr;		this.startLocX = startLocX;		this.startLocY = startLocY;		this.endLocX = endLocX;		this.endLocY = endLocY;		this.startXscale = startXscale;		this.startYscale = startYscale;		this.startRotation = startRotation;		this.startAlpha = startAlpha;		this.easeEff = easeEff;		this.nextX = 0;		this.nextY = 0;		this.target = target;		this.effect = effect;		this.formatEffect = formatEffect;		this.widthLimit = widthLimit;		this.speed = speed;		init ();	}	function fade (target:MovieClip, effect:String, endLocX:Number, endLocY:Number, endXscale:Number, endYscale:Number, endRotation:Number, endAlpha:Number, speed:Number, easeEff) {		this.endLocX = endLocX;		this.endLocY = endLocY;		this.endXscale = endXscale;		this.endYscale = endYscale;		this.endRotation = endRotation;		this.endAlpha = endAlpha;		this.easeEff = easeEff;		this.target = target;		this.effect = effect;		this.speed = speed;		init ();	}	function init () {		if (this.effect == "fadeIn") {			this.todo = 1;		} else {			this.todo = -1;		}		this.intMakeLetters = setInterval (this, "makeALetter", 100);	}	function makeALetter () {		if (this.effect == "fadeIn") {			var newName:String = "letter" + letterCount;			var newDepth:Number = letterCount;			var newLetter = this.target.attachMovie ("letter", newName, newDepth, {_alpha:0});			newLetter.txtLetter.setNewTextFormat (this.formatEffect);			newLetter.txtLetter.text = inputTextStr.charAt (this.letterCount);			newLetter.txtLetter.autoSize = true;			newLetter.txtLetter._x -= newLetter.txtLetter._width / 2;			newLetter.txtLetter._y -= newLetter.txtLetter._height / 2;			newLetter._x = this.nextX;			newLetter._y = this.nextY;			this.nextX += newLetter.txtLetter.textWidth+2;			TweenNano.to (newLetter,.5,{_x:newLetter._x + this.startLocX, _y:newLetter._y + this.startLocY, _rotation:newLetter._rotation + this.startRotation, _xscale:newLetter._xscale + this.startXscale, _yscale:newLetter._yscale + this.startYscale, _alpha:newLetter._alpha + this.startAlpha, onComplete:onFinishTweenFadeIn, onCompleteParams:[newLetter, this.startLocX, this.startLocY, this.easeEff, this.speed, this.startRotation]});			//trace(newLetter+" : "+this.endLocX+" : "+this.endLocX+" : "+this.startRotation+" : "+this.startXscale+" : "+this.startYscale+" : "+newLetter._x+" : "+newLetter._y+" : "+this.nextX+" : "+this.nextY);			if (this.nextX > this.widthLimit) {				this.nextX = 0;				this.nextY += newLetter._height;			}		} else {			var newLetter:MovieClip = eval (this.target + ".letter" + letterCount);			TweenNano.to (newLetter,this.speed,{_x:newLetter._x + this.endLocX, _y:newLetter._y + this.endLocY, _rotation:newLetter._rotation + this.endRotation, _xscale:newLetter._xscale + this.endXscale, _yscale:newLetter._yscale + this.endYscale, _alpha:this.endAlpha, onComplete:onFinishTweenFadeOut, onCompleteParams:[newLetter], ease:this.easeEff});		}		function onFinishTweenFadeIn (newLetter:MovieClip, xpos:Number, ypos:Number, easeEff, speed:Number, rota:Number) {			//trace():void			TweenNano.to (newLetter,speed,{_x:newLetter._x - xpos, _y:newLetter._y - ypos, _rotation:newLetter._rotation - rota, _xscale:100, _yscale:100, _alpha:100, ease:easeEff});			//trace(newLetter+" : "+this.endLocX+" : "+this.endLocX+" : "+this.startRotation+" : "+this.startXscale+" : "+this.startYscale+" : "+newLetter._x+" : "+newLetter._y+" : "+this.nextX+" : "+this.nextY);		}		function onFinishTweenFadeOut (mc:MovieClip) {			removeMovieClip (mc);		}		this.letterCount += this.todo;		if ((this.letterCount >= this.inputTextStr.length && this.todo == 1)) {			clearInterval (this.intMakeLetters);		}		if ((this.letterCount < 0 && this.todo == -1)) {			clearInterval (this.intMakeLetters);		}	}}